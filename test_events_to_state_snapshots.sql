\qecho '---------- Schema setup ------------'

CREATE SCHEMA IF NOT EXISTS test_events_to_state_snapshots;
SET search_path TO test_events_to_state_snapshots;

DROP TABLE IF EXISTS events;
CREATE TABLE events (
  id INT generated BY DEFAULT AS IDENTITY PRIMARY KEY,
  created_at timestamptz NOT NULL,
  type text NOT NULL
);

DROP TABLE IF EXISTS calls;
CREATE TABLE IF NOT EXISTS calls (
  id INT generated BY DEFAULT AS IDENTITY PRIMARY KEY,
  callee text NOT NULL,
  created_at timestamptz NOT NULL
);

INSERT INTO events (created_at, type) VALUES
  ('2019-01-01', 'created'),
  ('2019-01-10', 'add_hot_status'),
  ('2019-01-16', 'remove_hot_status'),
  ('2019-01-20', 'convert_to_prospect'),
  ('2019-01-22', 'add_quoted_status'),
  ('2019-01-25', 'convert_to_customer')
; -- INSERT

INSERT INTO calls (created_at, callee) VALUES
  ('2019-01-02', 'state:created hot:false quoted:false'),
  ('2019-01-11', 'state:created hot:true quoted:false'),
  ('2019-01-16', 'state:created hot:false quoted:false (same date)'),
  ('2019-01-17', 'state:created hot:false quoted:false (next day)'),
  ('2019-01-21', 'state:prospect hot:false quoted:false'),
  ('2019-01-23', 'state:prospect hot:false quoted:true'),
  ('2019-01-26', 'state:customer hot:false quoted:true')
; -- INSERT

SELECT
  calls.created_at        AS call_date,
  calls.callee            AS callee,

  CASE WHEN last_state.type = 'created' THEN 'created'
       WHEN last_state.type = 'convert_to_prospect' THEN 'prospect'
       WHEN last_state.type = 'convert_to_customer' THEN 'customer'
  END AS state,
  CASE WHEN last_hot.type = 'add_hot_status' THEN TRUE
       ELSE FALSE
  END AS is_hot,
  CASE WHEN last_quoted.type = 'add_quoted_status' THEN TRUE
       ELSE FALSE
  END AS is_quoted

FROM calls
LEFT JOIN LATERAL (
  SELECT *
  FROM events
  WHERE calls.created_at >= events.created_at
  AND events.type IN('created', 'convert_to_prospect', 'convert_to_customer')
  ORDER BY events.created_at DESC
  LIMIT 1
) AS last_state ON TRUE
LEFT JOIN LATERAL (
  SELECT *
  FROM events
  WHERE calls.created_at >= events.created_at
  AND events.type IN('add_hot_status', 'remove_hot_status')
  ORDER BY events.created_at DESC
  LIMIT 1
) AS last_hot ON TRUE
LEFT JOIN LATERAL (
  SELECT *
  FROM events
  WHERE calls.created_at >= events.created_at
  AND events.type IN('add_quoted_status', 'remove_quoted_status')
  ORDER BY events.created_at DESC
  LIMIT 1
) AS last_quoted ON TRUE

; -- SELECT


-- TODO:
-- * add Partial index to events.type column
-- * Read https://dba.stackexchange.com/questions/143044/optimise-a-LATERAL-JOIN-query-ON-a-big-table
